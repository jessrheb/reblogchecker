{"mappings":"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","sources":["<anon>","src/js/controller.js","src/js/model.js","src/js/config.js","src/js/helpers.js","src/js/views/stepOneView.js","src/js/views/View.js","src/js/views/stepTwoView.js","src/js/views/sessionView.js","src/js/views/outputView.js"],"sourcesContent":["const $ba30e20475feac5a$export$a9861bd62f48e142 = \"nhEAeubCSI57GS2pbE5CzllVrXQ9IRzKwU4wDn2EkWZFqnsk1T\";\nconst $ba30e20475feac5a$export$923ea8233b386e99 = \"https://api.tumblr.com/v2/blog/\";\nconst $ba30e20475feac5a$export$b56e23abc93fc286 = 50;\n\n\n/* ERROR MESSAGES GENERATOR */ const $bd02c871d9c5ba8e$export$493b5823483d2c4e = {\n    origin: {\n        retrieveBlogBasics: \"Sorry, I was unable to get any blog credentials:\",\n        retrieveBlogPosts: \"Sorry, I was unable to get your blog posts:\",\n        extractPostCredentials: `Sorry, I was unable to find this post's ID:`,\n        retrievePostRootID: `Sorry, I was unable to find this post's original ID:`,\n        blognameValidation: \"Whoops! Unexpected format or spelling:\"\n    },\n    error: {\n        notFound: {\n            blogname: `I couldn't get any information from the blogname you provided. If you're pretty sure it's spelled correctly, then make sure it's not hidden from people without an account too.`,\n            postURL: `I couldn't get any information from the URL you provided.`\n        },\n        limitExceeded: `Looks like we made too many requests to Tumblr in a short span of time.`,\n        notOK: `Something weird happened, either on our own end or yours.`,\n        noPostId: `Make sure you entered a valid post URL (E.g.: https://www.tumblr.com/blogname/123456789101112 or https://blogname.tumblr.com/post/123456789101112).`,\n        noRootId: `Is the original poster's blog not hidden from people without an account and the post ID correct?`,\n        unexpectedError: `Please check if you entered a valid blogname/URL in the appropriate field.`\n    },\n    ending: {\n        generic: `Try again a little later!`,\n        specific: `Please either choose another blog to search or try again a little later.`\n    }\n};\n/* ACCOUNTING FOR AS MANY USER INPUT VARIATIONS AND ERRORS AS POSSIBLE */ const $bd02c871d9c5ba8e$var$newFormatStandard = \"https://www.tumblr.com/\";\nconst $bd02c871d9c5ba8e$var$newFormatIncomplete = \"www.tumblr.com/\";\nconst $bd02c871d9c5ba8e$var$newFormatInformal = \"tumblr.com/\";\nconst $bd02c871d9c5ba8e$var$oldFormatStandard = \".tumblr.com/\";\nconst $bd02c871d9c5ba8e$var$oldFormatIncomplete = \".tumblr.com\";\nfunction $bd02c871d9c5ba8e$export$1216f43409aa5ee3(input) {\n    if (input.startsWith($bd02c871d9c5ba8e$var$newFormatStandard) || input.startsWith($bd02c871d9c5ba8e$var$newFormatIncomplete) || input.startsWith($bd02c871d9c5ba8e$var$newFormatInformal)) return true;\n    if (input.endsWith($bd02c871d9c5ba8e$var$oldFormatStandard) || input.endsWith($bd02c871d9c5ba8e$var$oldFormatIncomplete) || input.includes(\"/post/\")) return false;\n}\nfunction $bd02c871d9c5ba8e$export$98d83be08b8d417c(input) {\n    if ($bd02c871d9c5ba8e$export$1216f43409aa5ee3(input)) return input.trim().replace($bd02c871d9c5ba8e$var$newFormatStandard, \"\").replace($bd02c871d9c5ba8e$var$newFormatIncomplete, \"\").replace($bd02c871d9c5ba8e$var$newFormatInformal, \"\");\n    if (!$bd02c871d9c5ba8e$export$1216f43409aa5ee3(input)) return input.trim().replace(\"https://\", \"\").replace($bd02c871d9c5ba8e$var$oldFormatStandard, \" \").replace($bd02c871d9c5ba8e$var$oldFormatIncomplete, \" \");\n}\nfunction $bd02c871d9c5ba8e$export$ee60134fac004cfe(input) {\n    function typoCheck(input) {\n        const URLSignifiers = /[.\\/:]/g;\n        return URLSignifiers.test(input) ? undefined : input;\n    }\n    if ($bd02c871d9c5ba8e$export$1216f43409aa5ee3(input)) {\n        const trimmedInput = $bd02c871d9c5ba8e$export$98d83be08b8d417c(input);\n        return typoCheck(trimmedInput);\n    }\n    if (!$bd02c871d9c5ba8e$export$1216f43409aa5ee3(input)) {\n        const trimmedInput = $bd02c871d9c5ba8e$export$98d83be08b8d417c(input).trim();\n        return typoCheck(trimmedInput);\n    }\n    return typoCheck(input);\n}\nfunction $bd02c871d9c5ba8e$export$bd8707b01c1d34e9(input) {\n    if (!$bd02c871d9c5ba8e$export$ee60134fac004cfe(input)) throw new Error(`${$bd02c871d9c5ba8e$export$493b5823483d2c4e.origin.blognameValidation} ${$bd02c871d9c5ba8e$export$493b5823483d2c4e.error.unexpectedError}`);\n    else return $bd02c871d9c5ba8e$export$ee60134fac004cfe(input);\n}\nfunction $bd02c871d9c5ba8e$export$968e680ef4be9337(postID, symbol) {\n    return postID.slice(-postID.length, postID.indexOf(symbol));\n}\nfunction $bd02c871d9c5ba8e$export$3f1985e3ee38d114(type) {\n    let storage;\n    try {\n        storage = window[type];\n        const x = \"__storage_test__\";\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    } catch (error) {\n        return e instanceof DOMException && (e.code === 22 || e.code === 1014 || e.name === \"QuotaExceededError\" || e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && storage && storage.length !== 0;\n    }\n}\n\n\nconst $0f1d4402dffacf5b$export$913815d9607ddcf9 = {\n    getBlogname () {\n        return JSON.parse(sessionStorage.getItem(`CheckingFor`));\n    },\n    postRootID: \"\"\n};\nasync function $0f1d4402dffacf5b$export$abf02488c1c59248(blognameInput) {\n    try {\n        const blogname = (0, $bd02c871d9c5ba8e$export$bd8707b01c1d34e9)(blognameInput);\n        const response = await fetch(`${(0, $ba30e20475feac5a$export$923ea8233b386e99)}${blogname}.tumblr.com/info?api_key=${(0, $ba30e20475feac5a$export$a9861bd62f48e142)}`);\n        if (response.status === 404) throw new Error(`${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).origin.retrieveBlogBasics} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.notFound.blogname}`);\n        if (response.status === 429) throw new Error(`${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).origin.retrieveBlogBasics} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.limitExceeded} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).ending.generic}`);\n        if (!response.ok) throw new Error(`${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).origin.retrieveBlogBasics} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.notOK} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).ending.generic}`);\n        const infoBasics = await response.json();\n        const blogUUID = infoBasics.response.blog.uuid;\n        const totalPosts = infoBasics.response.blog.total_posts;\n        return [\n            blogname,\n            blogUUID,\n            totalPosts\n        ];\n    } catch (error) {\n        throw error;\n    }\n}\nasync function $0f1d4402dffacf5b$export$f093a98644e2e028([blogname, blogUUID, totalPosts]) {\n    try {\n        const requestPromises = [];\n        for(let offset = 0; offset <= totalPosts; offset += (0, $ba30e20475feac5a$export$b56e23abc93fc286))requestPromises.push(await fetch(`${(0, $ba30e20475feac5a$export$923ea8233b386e99)}${blogUUID}/posts?api_key=${(0, $ba30e20475feac5a$export$a9861bd62f48e142)}&limit=${(0, $ba30e20475feac5a$export$b56e23abc93fc286)}&offset=${offset}&reblog_info=true`));\n        const requestStatus = requestPromises.map((request)=>request.status);\n        if (requestStatus.includes(404)) throw new Error(`${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).origin.retrieveBlogPosts} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.notFound.blogname} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).ending.specific}`);\n        if (requestStatus.includes(429)) throw new Error(`${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).origin.retrieveBlogPosts} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.limitExceeded} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).ending.specific}`);\n        if (!requestStatus.every((status)=>status === 200)) throw new Error(`${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).origin.retrieveBlogPosts} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.notOK} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).ending.specific}`);\n        const response = await Promise.all(requestPromises.map(async (response)=>await response.json()));\n        const postsInfo = response.flatMap((request)=>{\n            return request.response.posts.map((post)=>{\n                return {\n                    rootID: post.reblogged_root_id ?? post.id_string,\n                    postURL: post.post_url\n                };\n            });\n        });\n        if (!(0, $bd02c871d9c5ba8e$export$3f1985e3ee38d114)(\"sessionStorage\")) throw new Error(`Sorry! Seems like you don't have enough space in your session storage or it isn't altogether available in the browser you're using. Reblog Checker needs access to it in order to work.`);\n        sessionStorage.setItem(`CheckingFor`, JSON.stringify(`${blogname}`));\n        sessionStorage.setItem(`${blogname}PostsInfo`, JSON.stringify(postsInfo));\n        console.log(`${blogname}'s posts root IDs and reblogs URLs retrieved and stored in ${blogname}PostsInfo!`);\n    } catch (error) {\n        throw error;\n    }\n}\nasync function $0f1d4402dffacf5b$export$b4cd066a67fd4e9f(URL) {\n    try {\n        /* NEW URL FORMAT */ if ((0, $bd02c871d9c5ba8e$export$1216f43409aa5ee3)(URL)) {\n            const URLToTreat = (0, $bd02c871d9c5ba8e$export$98d83be08b8d417c)(URL).replace(\"/\", \" \").split(\" \");\n            const [blogname, postID] = URLToTreat;\n            /* INVALID POST URL ERROR TAKES PRECEDENCE OVER BLOG UUID NOT FOUND */ if (!postID) throw new Error(`${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).origin.extractPostCredentials} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.notFound.postURL} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.noPostId}`);\n            const [, blogUUID] = await $0f1d4402dffacf5b$export$abf02488c1c59248(blogname);\n            if (!blogUUID) return;\n            if (postID.includes(\"/\")) {\n                const postIDClean = (0, $bd02c871d9c5ba8e$export$968e680ef4be9337)(postID, \"/\");\n                return [\n                    blogname,\n                    blogUUID,\n                    postIDClean\n                ];\n            }\n            if (postID.includes(\"?\")) {\n                const postIDClean = (0, $bd02c871d9c5ba8e$export$968e680ef4be9337)(postID, \"?\");\n                return [\n                    blogname,\n                    blogUUID,\n                    postIDClean\n                ];\n            }\n            return [\n                blogname,\n                blogUUID,\n                postID\n            ];\n        }\n        /* OLD URL FORMAT */ if (!(0, $bd02c871d9c5ba8e$export$1216f43409aa5ee3)(URL)) {\n            const URLToTreat = (0, $bd02c871d9c5ba8e$export$98d83be08b8d417c)(URL).replace(\"post/\", \"\").split(\" \");\n            const [blogname, postID] = URLToTreat;\n            /* INVALID POST URL ERROR TAKES PRECEDENCE OVER BLOG UUID NOT FOUND */ if (!postID) throw new Error(`${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).origin.extractPostCredentials} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.notFound.postURL} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.noPostId}`);\n            const [, blogUUID] = await $0f1d4402dffacf5b$export$abf02488c1c59248(blogname);\n            if (!blogUUID) return;\n            if (postID.includes(\"/\")) {\n                const postIDClean = (0, $bd02c871d9c5ba8e$export$968e680ef4be9337)(postID, \"/\");\n                return [\n                    blogname,\n                    blogUUID,\n                    postIDClean\n                ];\n            }\n            if (postID.includes(\"?\")) {\n                const postIDClean = (0, $bd02c871d9c5ba8e$export$968e680ef4be9337)(postID, \"?\");\n                return [\n                    blogname,\n                    blogUUID,\n                    postIDClean\n                ];\n            }\n            return [\n                blogname,\n                blogUUID,\n                postID\n            ];\n        }\n        return;\n    } catch (error) {\n        throw error;\n    }\n}\nasync function $0f1d4402dffacf5b$export$b890cb1c1145887b([, blogUUID, postID]) {\n    try {\n        const response = await fetch(`${(0, $ba30e20475feac5a$export$923ea8233b386e99)}${blogUUID}/posts?api_key=${(0, $ba30e20475feac5a$export$a9861bd62f48e142)}&id=${postID}&reblog_info=true`);\n        if (response.status === 404) throw new Error(`${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).origin.retrievePostRootID} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.notFound.postURL} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.noRootId}`);\n        if (response.status === 429) throw new Error(`${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).origin.retrievePostRootID} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.limitExceeded} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).ending.generic}`);\n        if (!response.ok) throw new Error(`${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).origin.retrievePostRootID} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).error.notOK} ${(0, $bd02c871d9c5ba8e$export$493b5823483d2c4e).ending.generic}`);\n        const postInfo = await response.json();\n        const rootID = postInfo.response.posts.at(0).reblogged_root_id ?? postInfo.response.posts.at(0).id_string;\n        return rootID;\n    } catch (error) {\n        throw error;\n    }\n}\nfunction $0f1d4402dffacf5b$export$f377efffa0e0722b(blogname, postRootID) {\n    const postsInfo = JSON.parse(sessionStorage.getItem(`${blogname}PostsInfo`));\n    if (!postsInfo) return;\n    const targetedPosts = postsInfo.filter((post)=>post.rootID === postRootID);\n    const numberOfInstances = targetedPosts.length;\n    if (numberOfInstances) {\n        const instancesURLs = targetedPosts.map((instance)=>instance.postURL);\n        return [\n            numberOfInstances,\n            instancesURLs\n        ];\n    } else return;\n}\n\n\nclass $3a07c34e115c11c9$export$2e2bcd8739ae039 {\n    inputSet = [\n        \".input\",\n        \"input\"\n    ];\n    errorMessage = '.message[data-type=\"error\"]';\n    mainScreen = document.querySelector(\"main\");\n    stepHeading = document.querySelector(\".step-heading\");\n    iconHeading = document.querySelector(\".icon-heading\");\n    checkingForWindow = document.querySelector(\".checking-for\");\n    buttonTag = document.querySelector(\".button-tag\");\n    addHandlerScreenReset(activeScreen = this.activeScreen) {\n        activeScreen.querySelector(\"input\").addEventListener(\"input\", this.resetScreen.bind(this));\n    }\n    stepScreenInit(activeStep = this.activeStep) {\n        [\n            this.mainScreen,\n            this.stepHeading,\n            this.checkingForWindow\n        ].forEach((element)=>element.setAttribute(\"data-state\", activeStep));\n    }\n    loadStopAnimation() {\n        const loadingSpinnerAnimation = this.stepHeading.getAnimations({\n            subtree: true\n        }).find((animation)=>animation.animationName === \"loadingSpinner\");\n        loadingSpinnerAnimation.pause();\n        const currentFrame = getComputedStyle(this.stepHeading).transform;\n        const loadingStopAnimation = this.stepHeading.animate([\n            {\n                transform: currentFrame\n            },\n            {\n                transform: \"matrix(1, 0, 0, 1, 0, 0)\"\n            }\n        ], {\n            duration: 300,\n            fill: \"forwards\"\n        });\n        return loadingStopAnimation.finished;\n    }\n    renderSpinner() {\n        this.stepHeading.setAttribute(\"data-state\", \"loading-spinner\");\n    }\n    inputValidation(entryValidity, activeScreen = this.activeScreen) {\n        this.inputSet.forEach((element)=>activeScreen.querySelector(element).setAttribute(\"data-valid\", entryValidity));\n        if (!entryValidity) activeScreen.querySelector(\"button\").setAttribute(\"disabled\", true);\n    }\n    renderError(activeScreen, error) {\n        const activeErrorMessage = activeScreen.querySelector(this.errorMessage);\n        activeErrorMessage.setAttribute(\"data-active\", true);\n        activeErrorMessage.querySelector(\"p\").innerText = `${error.message}`;\n    }\n    errorManager(error, activeScreen = this.activeScreen) {\n        this.loadStopAnimation().then(()=>{\n            this.renderError(activeScreen, error);\n            this.stepScreenInit();\n            this.inputValidation(false);\n        });\n    }\n    resetForm() {\n        this.stepForm[1].localName !== \"button\" ? this.stepForm.forEach((form)=>form.reset()) : this.stepForm.reset();\n    }\n    resetScreen(resetEverything = true) {\n        const resettableAttributes = [\n            \"data-active\",\n            \"data-valid\",\n            \"disabled\"\n        ];\n        if (!resetEverything) resettableAttributes.shift();\n        resettableAttributes.forEach((attribute)=>this.mainScreen.querySelectorAll(`[${attribute}]`).forEach((activeElement)=>activeElement.removeAttribute(attribute)));\n    }\n}\n\n\nclass $00699351e50f4618$var$StepOneView extends (0, $3a07c34e115c11c9$export$2e2bcd8739ae039) {\n    activeStep = \"step-one\";\n    activeScreen = document.querySelector(\"#step-one\");\n    stepForm = document.querySelector(\".blogname-form\");\n    constructor(){\n        super();\n        this.addHandlerScreenReset();\n    }\n    addHandlerBlognameForm(handler) {\n        this.stepForm.addEventListener(\"submit\", (event)=>{\n            event.preventDefault();\n            const formData = new FormData(event.target);\n            const blognameInput = Object.fromEntries(formData).blognameForm;\n            handler(blognameInput);\n        });\n    }\n}\nvar $00699351e50f4618$export$2e2bcd8739ae039 = new $00699351e50f4618$var$StepOneView();\n\n\n\nclass $66f82ae3c80aad68$var$StepTwoView extends (0, $3a07c34e115c11c9$export$2e2bcd8739ae039) {\n    activeStep = \"step-two\";\n    activeScreen = document.querySelector(\"#step-two\");\n    stepForm = document.querySelector(\".post-form\");\n    constructor(){\n        super();\n        this.addHandlerScreenReset();\n    }\n    addHandlerPostForm(handler) {\n        this.stepForm.addEventListener(\"submit\", (event)=>{\n            this.resetScreen();\n            event.preventDefault();\n            const formData = new FormData(event.target);\n            const postInput = Object.fromEntries(formData).postForm;\n            handler(postInput);\n        });\n    }\n    setCheckingForBlogname(blogname) {\n        this.buttonTag.innerText = blogname;\n    }\n}\nvar $66f82ae3c80aad68$export$2e2bcd8739ae039 = new $66f82ae3c80aad68$var$StepTwoView();\n\n\n\nclass $dd6c020ea341222a$var$SessionView extends (0, $3a07c34e115c11c9$export$2e2bcd8739ae039) {\n    stepForm = document.querySelectorAll(\"form\");\n    scrollIntoView = document.querySelector(\"header button\");\n    constructor(){\n        super();\n        this.addHandlerScrollIntoView();\n    }\n    addHandlerScrollIntoView() {\n        this.scrollIntoView.addEventListener(\"click\", ()=>this.mainScreen.scrollIntoView({\n                behavior: \"smooth\"\n            }));\n    }\n    addHandlerSessionWatch(handler) {\n        window.addEventListener(\"load\", handler);\n    }\n    addHandlerStepWatch(handler) {\n        const observer = new MutationObserver(handler);\n        observer.observe(this.mainScreen, {\n            attributeFilter: [\n                \"data-state\"\n            ],\n            attributeOldValue: true\n        });\n    }\n    addHandlerStoreScroll(handler) {\n        document.addEventListener(\"scroll\", handler, {\n            passive: true\n        });\n    }\n    addHandlerStepBackward(handler) {\n        this.buttonTag.addEventListener(\"click\", handler);\n    }\n    stepWatch(mutationList) {\n        const stepIcons = [\n            \"bi-1-circle\",\n            \"bi-2-circle\"\n        ];\n        mutationList.forEach((mutation)=>{\n            if (mutation.target.dataset.state !== mutation.oldValue) stepIcons.forEach((stepIcon)=>this.iconHeading.classList.toggle(stepIcon));\n        });\n    }\n    debounce(someFunction) {\n        let frame;\n        return (...parameters)=>{\n            if (frame) cancelAnimationFrame(frame);\n            frame = requestAnimationFrame(()=>{\n                someFunction(...parameters);\n            });\n        };\n    }\n    storeScroll() {\n        const elements = [\n            this.stepHeading,\n            this.checkingForWindow\n        ];\n        document.documentElement.dataset.scroll = window.scrollY;\n        if (window.scrollY >= window.innerHeight - window.innerHeight / 3) elements.forEach((element)=>element.setAttribute(\"data-visible\", true));\n        else elements.forEach((element)=>element.setAttribute(\"data-visible\", false));\n    }\n}\nvar $dd6c020ea341222a$export$2e2bcd8739ae039 = new $dd6c020ea341222a$var$SessionView();\n\n\n\nclass $ebc1934d4b1e594a$var$OutputView extends (0, $3a07c34e115c11c9$export$2e2bcd8739ae039) {\n    outputWindow = document.querySelectorAll(\".output\");\n    numberOfInstances = document.querySelector(\".instances\");\n    postURLs = document.querySelector(\".post-urls\");\n    setReblogInstances(numberOfInstances) {\n        this.numberOfInstances.innerText = numberOfInstances > 1 ? `${numberOfInstances} times` : `${numberOfInstances} time`;\n    }\n    setURLAttributes(element, attributes) {\n        Object.keys(attributes).forEach((attribute)=>{\n            element.setAttribute(attribute, attributes[attribute]);\n        });\n    }\n    setReblogURLs(instancesURLs) {\n        instancesURLs.forEach((URL)=>{\n            const hrefAttributes = {\n                href: URL,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n            };\n            const aHref = document.createElement(\"a\");\n            aHref.innerText = URL;\n            this.setURLAttributes(aHref, hrefAttributes);\n            this.postURLs.appendChild(aHref);\n        });\n    }\n    resetReblogURLs() {\n        if (this.postURLs.hasChildNodes()) this.postURLs.querySelectorAll(\"a\").forEach((element)=>this.postURLs.removeChild(element));\n    }\n    showResult(outcome) {\n        this.outputWindow.forEach((output)=>output.dataset.result === outcome && output.setAttribute(\"data-active\", true));\n    }\n}\nvar $ebc1934d4b1e594a$export$2e2bcd8739ae039 = new $ebc1934d4b1e594a$var$OutputView();\n\n\nfunction $f50bd1f2915ed0f2$var$controlSessionWatch() {\n    if (!sessionStorage.getItem(`CheckingFor`)) (0, $00699351e50f4618$export$2e2bcd8739ae039).stepScreenInit();\n    else {\n        (0, $66f82ae3c80aad68$export$2e2bcd8739ae039).stepScreenInit();\n        (0, $66f82ae3c80aad68$export$2e2bcd8739ae039).setCheckingForBlogname($0f1d4402dffacf5b$export$913815d9607ddcf9.getBlogname());\n    }\n}\nfunction $f50bd1f2915ed0f2$var$controlStepWatch(mutationList) {\n    (0, $dd6c020ea341222a$export$2e2bcd8739ae039).stepWatch(mutationList);\n}\nfunction $f50bd1f2915ed0f2$var$controlStoreScroll() {\n    (0, $dd6c020ea341222a$export$2e2bcd8739ae039).debounce((0, $dd6c020ea341222a$export$2e2bcd8739ae039).storeScroll);\n    (0, $dd6c020ea341222a$export$2e2bcd8739ae039).storeScroll();\n}\nasync function $f50bd1f2915ed0f2$var$controlBlognameForm(blognameInput) {\n    try {\n        (0, $dd6c020ea341222a$export$2e2bcd8739ae039).renderSpinner();\n        const blogBasics = await $0f1d4402dffacf5b$export$abf02488c1c59248(blognameInput);\n        (0, $00699351e50f4618$export$2e2bcd8739ae039).inputValidation(true);\n        await $0f1d4402dffacf5b$export$f093a98644e2e028(blogBasics);\n        (0, $dd6c020ea341222a$export$2e2bcd8739ae039).loadStopAnimation().then(()=>{\n            (0, $00699351e50f4618$export$2e2bcd8739ae039).resetScreen(false);\n            (0, $66f82ae3c80aad68$export$2e2bcd8739ae039).stepScreenInit();\n            (0, $66f82ae3c80aad68$export$2e2bcd8739ae039).setCheckingForBlogname($0f1d4402dffacf5b$export$913815d9607ddcf9.getBlogname());\n        });\n    } catch (error) {\n        console.error(error);\n        (0, $00699351e50f4618$export$2e2bcd8739ae039).errorManager(error);\n    }\n}\nasync function $f50bd1f2915ed0f2$var$controlPostForm(postInput) {\n    try {\n        (0, $dd6c020ea341222a$export$2e2bcd8739ae039).renderSpinner();\n        const postCredentials = await $0f1d4402dffacf5b$export$b4cd066a67fd4e9f(postInput);\n        const postRootID = await $0f1d4402dffacf5b$export$b890cb1c1145887b(postCredentials);\n        (0, $66f82ae3c80aad68$export$2e2bcd8739ae039).inputValidation(true);\n        $0f1d4402dffacf5b$export$913815d9607ddcf9.postRootID = postRootID;\n        (0, $dd6c020ea341222a$export$2e2bcd8739ae039).loadStopAnimation().then(()=>{\n            (0, $66f82ae3c80aad68$export$2e2bcd8739ae039).resetScreen(false);\n            (0, $66f82ae3c80aad68$export$2e2bcd8739ae039).stepScreenInit();\n            $f50bd1f2915ed0f2$var$controlCheckResult();\n        });\n    } catch (error) {\n        console.error(error);\n        (0, $66f82ae3c80aad68$export$2e2bcd8739ae039).errorManager(error);\n    }\n}\nfunction $f50bd1f2915ed0f2$var$controlCheckResult() {\n    const reblogCheckData = $0f1d4402dffacf5b$export$f377efffa0e0722b($0f1d4402dffacf5b$export$913815d9607ddcf9.getBlogname(), $0f1d4402dffacf5b$export$913815d9607ddcf9.postRootID);\n    if (!reblogCheckData) {\n        (0, $ebc1934d4b1e594a$export$2e2bcd8739ae039).showResult(\"negative\");\n        return;\n    }\n    const [numberOfInstances, instancesURLs] = reblogCheckData;\n    (0, $ebc1934d4b1e594a$export$2e2bcd8739ae039).setReblogInstances(numberOfInstances);\n    (0, $ebc1934d4b1e594a$export$2e2bcd8739ae039).resetReblogURLs();\n    (0, $ebc1934d4b1e594a$export$2e2bcd8739ae039).setReblogURLs(instancesURLs);\n    (0, $ebc1934d4b1e594a$export$2e2bcd8739ae039).showResult(\"positive\");\n}\nfunction $f50bd1f2915ed0f2$var$controlStepBackward() {\n    if (window.confirm(`Done checking for ${$0f1d4402dffacf5b$export$913815d9607ddcf9.getBlogname()}? This will take you back to the previous step.`)) {\n        sessionStorage.clear();\n        (0, $dd6c020ea341222a$export$2e2bcd8739ae039).resetForm();\n        (0, $dd6c020ea341222a$export$2e2bcd8739ae039).resetScreen();\n        (0, $00699351e50f4618$export$2e2bcd8739ae039).stepScreenInit();\n    }\n}\nfunction $f50bd1f2915ed0f2$var$init() {\n    (0, $dd6c020ea341222a$export$2e2bcd8739ae039).addHandlerSessionWatch($f50bd1f2915ed0f2$var$controlSessionWatch);\n    (0, $dd6c020ea341222a$export$2e2bcd8739ae039).addHandlerStepWatch($f50bd1f2915ed0f2$var$controlStepWatch);\n    (0, $dd6c020ea341222a$export$2e2bcd8739ae039).addHandlerStoreScroll($f50bd1f2915ed0f2$var$controlStoreScroll);\n    (0, $dd6c020ea341222a$export$2e2bcd8739ae039).addHandlerStepBackward($f50bd1f2915ed0f2$var$controlStepBackward);\n    (0, $00699351e50f4618$export$2e2bcd8739ae039).addHandlerBlognameForm($f50bd1f2915ed0f2$var$controlBlognameForm);\n    (0, $66f82ae3c80aad68$export$2e2bcd8739ae039).addHandlerPostForm($f50bd1f2915ed0f2$var$controlPostForm);\n}\n$f50bd1f2915ed0f2$var$init();\n\n\n//# sourceMappingURL=index.5ee3ca99.js.map\n","import * as model from './model.js';\n\nimport stepOneView from './views/stepOneView.js';\nimport stepTwoView from './views/stepTwoView.js';\nimport sessionView from './views/sessionView.js';\nimport outputView from './views/outputView.js';\n\nfunction controlSessionWatch() {\n  if (!sessionStorage.getItem(`CheckingFor`)) {\n    stepOneView.stepScreenInit();\n  } else {\n    stepTwoView.stepScreenInit();\n    stepTwoView.setCheckingForBlogname(model.sessionData.getBlogname());\n  }\n}\n\nfunction controlStepWatch(mutationList) {\n  sessionView.stepWatch(mutationList);\n}\n\nfunction controlStoreScroll() {\n  sessionView.debounce(sessionView.storeScroll);\n  sessionView.storeScroll();\n}\n\nasync function controlBlognameForm(blognameInput) {\n  try {\n    sessionView.renderSpinner();\n\n    const blogBasics = await model.retrieveBlogBasics(blognameInput);\n\n    stepOneView.inputValidation(true);\n\n    await model.retrieveBlogPosts(blogBasics);\n\n    sessionView.loadStopAnimation().then(() => {\n      stepOneView.resetScreen(false);\n      stepTwoView.stepScreenInit();\n      stepTwoView.setCheckingForBlogname(model.sessionData.getBlogname());\n    });\n  } catch (error) {\n    console.error(error);\n    stepOneView.errorManager(error);\n  }\n}\n\nasync function controlPostForm(postInput) {\n  try {\n    sessionView.renderSpinner();\n\n    const postCredentials = await model.extractPostCredentials(postInput);\n    const postRootID = await model.retrievePostRootID(postCredentials);\n\n    stepTwoView.inputValidation(true);\n\n    model.sessionData.postRootID = postRootID;\n\n    sessionView.loadStopAnimation().then(() => {\n      stepTwoView.resetScreen(false);\n      stepTwoView.stepScreenInit();\n      controlCheckResult();\n    });\n  } catch (error) {\n    console.error(error);\n    stepTwoView.errorManager(error);\n  }\n}\n\nfunction controlCheckResult() {\n  const reblogCheckData = model.reblogCheck(\n    model.sessionData.getBlogname(),\n    model.sessionData.postRootID\n  );\n\n  if (!reblogCheckData) {\n    outputView.showResult('negative');\n    return;\n  }\n\n  const [numberOfInstances, instancesURLs] = reblogCheckData;\n\n  outputView.setReblogInstances(numberOfInstances);\n  outputView.resetReblogURLs();\n  outputView.setReblogURLs(instancesURLs);\n  outputView.showResult('positive');\n}\n\nfunction controlStepBackward() {\n  if (\n    window.confirm(\n      `Done checking for ${model.sessionData.getBlogname()}? This will take you back to the previous step.`\n    )\n  ) {\n    sessionStorage.clear();\n    sessionView.resetForm();\n    sessionView.resetScreen();\n    stepOneView.stepScreenInit();\n  }\n}\n\nfunction init() {\n  sessionView.addHandlerSessionWatch(controlSessionWatch);\n  sessionView.addHandlerStepWatch(controlStepWatch);\n  sessionView.addHandlerStoreScroll(controlStoreScroll);\n  sessionView.addHandlerStepBackward(controlStepBackward);\n  stepOneView.addHandlerBlognameForm(controlBlognameForm);\n  stepTwoView.addHandlerPostForm(controlPostForm);\n}\n\ninit();\n","import { API_KEY, API_URL, POSTS_PER_PAGE } from './config.js';\nimport {\n  URLTrimmer,\n  blognameValidation,\n  errorMessage,\n  isNewFormat,\n  postURLTrimmer,\n  storageAvailable,\n} from './helpers.js';\n\nexport const sessionData = {\n  getBlogname() {\n    return JSON.parse(sessionStorage.getItem(`CheckingFor`));\n  },\n  postRootID: '',\n};\n\n/* STEP 0.5: RETRIEVE BASIC BLOG INFORMATION */\n\nexport async function retrieveBlogBasics(blognameInput) {\n  try {\n    const blogname = blognameValidation(blognameInput);\n\n    const response = await fetch(\n      `${API_URL}${blogname}.tumblr.com/info?api_key=${API_KEY}`\n    );\n\n    if (response.status === 404)\n      throw new Error(\n        `${errorMessage.origin.retrieveBlogBasics} ${errorMessage.error.notFound.blogname}`\n      );\n\n    if (response.status === 429)\n      throw new Error(\n        `${errorMessage.origin.retrieveBlogBasics} ${errorMessage.error.limitExceeded} ${errorMessage.ending.generic}`\n      );\n\n    if (!response.ok)\n      throw new Error(\n        `${errorMessage.origin.retrieveBlogBasics} ${errorMessage.error.notOK} ${errorMessage.ending.generic}`\n      );\n\n    const infoBasics = await response.json();\n    const blogUUID = infoBasics.response.blog.uuid;\n    const totalPosts = infoBasics.response.blog.total_posts;\n\n    return [blogname, blogUUID, totalPosts];\n  } catch (error) {\n    throw error;\n  }\n}\n\n/* STEP 1: RETRIEVE AND STORE ALL POSTS'S ROOT IDS FROM PROVIDED BLOGNAME */\n\nexport async function retrieveBlogPosts([blogname, blogUUID, totalPosts]) {\n  try {\n    const requestPromises = [];\n\n    for (let offset = 0; offset <= totalPosts; offset += POSTS_PER_PAGE) {\n      requestPromises.push(\n        await fetch(\n          `${API_URL}${blogUUID}/posts?api_key=${API_KEY}&limit=${POSTS_PER_PAGE}&offset=${offset}&reblog_info=true`\n        )\n      );\n    }\n\n    const requestStatus = requestPromises.map((request) => request.status);\n\n    if (requestStatus.includes(404))\n      throw new Error(\n        `${errorMessage.origin.retrieveBlogPosts} ${errorMessage.error.notFound.blogname} ${errorMessage.ending.specific}`\n      );\n\n    if (requestStatus.includes(429))\n      throw new Error(\n        `${errorMessage.origin.retrieveBlogPosts} ${errorMessage.error.limitExceeded} ${errorMessage.ending.specific}`\n      );\n\n    if (!requestStatus.every((status) => status === 200))\n      throw new Error(\n        `${errorMessage.origin.retrieveBlogPosts} ${errorMessage.error.notOK} ${errorMessage.ending.specific}`\n      );\n\n    const response = await Promise.all(\n      requestPromises.map(async (response) => await response.json())\n    );\n\n    const postsInfo = response.flatMap((request) => {\n      return request.response.posts.map((post) => {\n        return {\n          rootID: post.reblogged_root_id ?? post.id_string,\n          postURL: post.post_url,\n        };\n      });\n    });\n\n    if (!storageAvailable('sessionStorage'))\n      throw new Error(\n        `Sorry! Seems like you don't have enough space in your session storage or it isn't altogether available in the browser you're using. Reblog Checker needs access to it in order to work.`\n      );\n\n    sessionStorage.setItem(`CheckingFor`, JSON.stringify(`${blogname}`));\n    sessionStorage.setItem(`${blogname}PostsInfo`, JSON.stringify(postsInfo));\n\n    console.log(\n      `${blogname}'s posts root IDs and reblogs URLs retrieved and stored in ${blogname}PostsInfo!`\n    );\n  } catch (error) {\n    throw error;\n  }\n}\n\n/* STEP 2: EXTRACT CREDENTIALS (BLOGNAME, USER UUID, POST ID) FROM PROVIDED POST URL */\n\nexport async function extractPostCredentials(URL) {\n  try {\n    /* NEW URL FORMAT */\n\n    if (isNewFormat(URL)) {\n      const URLToTreat = URLTrimmer(URL).replace('/', ' ').split(' ');\n      const [blogname, postID] = URLToTreat;\n\n      /* INVALID POST URL ERROR TAKES PRECEDENCE OVER BLOG UUID NOT FOUND */\n\n      if (!postID)\n        throw new Error(\n          `${errorMessage.origin.extractPostCredentials} ${errorMessage.error.notFound.postURL} ${errorMessage.error.noPostId}`\n        );\n\n      const [, blogUUID] = await retrieveBlogBasics(blogname);\n\n      if (!blogUUID) return;\n\n      if (postID.includes('/')) {\n        const postIDClean = postURLTrimmer(postID, '/');\n        return [blogname, blogUUID, postIDClean];\n      }\n\n      if (postID.includes('?')) {\n        const postIDClean = postURLTrimmer(postID, '?');\n        return [blogname, blogUUID, postIDClean];\n      }\n      return [blogname, blogUUID, postID];\n    }\n\n    /* OLD URL FORMAT */\n\n    if (!isNewFormat(URL)) {\n      const URLToTreat = URLTrimmer(URL).replace('post/', '').split(' ');\n      const [blogname, postID] = URLToTreat;\n\n      /* INVALID POST URL ERROR TAKES PRECEDENCE OVER BLOG UUID NOT FOUND */\n\n      if (!postID)\n        throw new Error(\n          `${errorMessage.origin.extractPostCredentials} ${errorMessage.error.notFound.postURL} ${errorMessage.error.noPostId}`\n        );\n\n      const [, blogUUID] = await retrieveBlogBasics(blogname);\n\n      if (!blogUUID) return;\n\n      if (postID.includes('/')) {\n        const postIDClean = postURLTrimmer(postID, '/');\n        return [blogname, blogUUID, postIDClean];\n      }\n\n      if (postID.includes('?')) {\n        const postIDClean = postURLTrimmer(postID, '?');\n        return [blogname, blogUUID, postIDClean];\n      }\n      return [blogname, blogUUID, postID];\n    }\n    return;\n  } catch (error) {\n    throw error;\n  }\n}\n\n/* STEP 3: LOOK INTO PROVIDED POST'S INFORMATION FOR POST ROOT ID */\n\nexport async function retrievePostRootID([, blogUUID, postID]) {\n  try {\n    const response = await fetch(\n      `${API_URL}${blogUUID}/posts?api_key=${API_KEY}&id=${postID}&reblog_info=true`\n    );\n\n    if (response.status === 404)\n      throw new Error(\n        `${errorMessage.origin.retrievePostRootID} ${errorMessage.error.notFound.postURL} ${errorMessage.error.noRootId}`\n      );\n\n    if (response.status === 429)\n      throw new Error(\n        `${errorMessage.origin.retrievePostRootID} ${errorMessage.error.limitExceeded} ${errorMessage.ending.generic}`\n      );\n\n    if (!response.ok)\n      throw new Error(\n        `${errorMessage.origin.retrievePostRootID} ${errorMessage.error.notOK} ${errorMessage.ending.generic}`\n      );\n\n    const postInfo = await response.json();\n    const rootID =\n      postInfo.response.posts.at(0).reblogged_root_id ??\n      postInfo.response.posts.at(0).id_string;\n\n    return rootID;\n  } catch (error) {\n    throw error;\n  }\n}\n\n/* STEP 4: PERFORM REBLOG CHECK BY COMPARING RETRIEVED POST'S ROOT ID WITH USER'S STORED ROOT IDS */\n\nexport function reblogCheck(blogname, postRootID) {\n  const postsInfo = JSON.parse(sessionStorage.getItem(`${blogname}PostsInfo`));\n\n  if (!postsInfo) return;\n\n  const targetedPosts = postsInfo.filter((post) => post.rootID === postRootID);\n  const numberOfInstances = targetedPosts.length;\n\n  if (numberOfInstances) {\n    const instancesURLs = targetedPosts.map((instance) => instance.postURL);\n    return [numberOfInstances, instancesURLs];\n  } else return;\n}\n","export const API_KEY = 'nhEAeubCSI57GS2pbE5CzllVrXQ9IRzKwU4wDn2EkWZFqnsk1T';\nexport const API_URL = 'https://api.tumblr.com/v2/blog/';\nexport const POSTS_PER_PAGE = 50;\n","/* ERROR MESSAGES GENERATOR */\n\nexport const errorMessage = {\n  origin: {\n    retrieveBlogBasics: 'Sorry, I was unable to get any blog credentials:',\n    retrieveBlogPosts: 'Sorry, I was unable to get your blog posts:',\n    extractPostCredentials: `Sorry, I was unable to find this post's ID:`,\n    retrievePostRootID: `Sorry, I was unable to find this post's original ID:`,\n    blognameValidation: 'Whoops! Unexpected format or spelling:',\n  },\n  error: {\n    notFound: {\n      blogname: `I couldn't get any information from the blogname you provided. If you're pretty sure it's spelled correctly, then make sure it's not hidden from people without an account too.`,\n      postURL: `I couldn't get any information from the URL you provided.`,\n    },\n    limitExceeded: `Looks like we made too many requests to Tumblr in a short span of time.`,\n    notOK: `Something weird happened, either on our own end or yours.`,\n    noPostId: `Make sure you entered a valid post URL (E.g.: https://www.tumblr.com/blogname/123456789101112 or https://blogname.tumblr.com/post/123456789101112).`,\n    noRootId: `Is the original poster's blog not hidden from people without an account and the post ID correct?`,\n    unexpectedError: `Please check if you entered a valid blogname/URL in the appropriate field.`,\n  },\n  ending: {\n    generic: `Try again a little later!`,\n    specific: `Please either choose another blog to search or try again a little later.`,\n  },\n};\n\n/* ACCOUNTING FOR AS MANY USER INPUT VARIATIONS AND ERRORS AS POSSIBLE */\n\nconst newFormatStandard = 'https://www.tumblr.com/';\nconst newFormatIncomplete = 'www.tumblr.com/';\nconst newFormatInformal = 'tumblr.com/';\nconst oldFormatStandard = '.tumblr.com/';\nconst oldFormatIncomplete = '.tumblr.com';\n\nexport function isNewFormat(input) {\n  if (\n    input.startsWith(newFormatStandard) ||\n    input.startsWith(newFormatIncomplete) ||\n    input.startsWith(newFormatInformal)\n  )\n    return true;\n\n  if (\n    input.endsWith(oldFormatStandard) ||\n    input.endsWith(oldFormatIncomplete) ||\n    input.includes('/post/')\n  )\n    return false;\n}\n\nexport function URLTrimmer(input) {\n  if (isNewFormat(input)) {\n    return input\n      .trim()\n      .replace(newFormatStandard, '')\n      .replace(newFormatIncomplete, '')\n      .replace(newFormatInformal, '');\n  }\n\n  if (!isNewFormat(input)) {\n    return input\n      .trim()\n      .replace('https://', '')\n      .replace(oldFormatStandard, ' ')\n      .replace(oldFormatIncomplete, ' ');\n  }\n}\n\nexport function blognameTrimmer(input) {\n  function typoCheck(input) {\n    const URLSignifiers = /[.\\/:]/g;\n    return URLSignifiers.test(input) ? undefined : input;\n  }\n\n  if (isNewFormat(input)) {\n    const trimmedInput = URLTrimmer(input);\n    return typoCheck(trimmedInput);\n  }\n\n  if (!isNewFormat(input)) {\n    const trimmedInput = URLTrimmer(input).trim();\n    return typoCheck(trimmedInput);\n  }\n  return typoCheck(input);\n}\n\nexport function blognameValidation(input) {\n  if (!blognameTrimmer(input))\n    throw new Error(\n      `${errorMessage.origin.blognameValidation} ${errorMessage.error.unexpectedError}`\n    );\n  else return blognameTrimmer(input);\n}\n\nexport function postURLTrimmer(postID, symbol) {\n  return postID.slice(-postID.length, postID.indexOf(symbol));\n}\n\n/* CHECKING SESSION STORAGE AVAILABILITY */\n\nexport function storageAvailable(type) {\n  let storage;\n\n  try {\n    storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    return (\n      e instanceof DOMException &&\n      (e.code === 22 ||\n        e.code === 1014 ||\n        e.name === 'QuotaExceededError' ||\n        e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n","import View from './View';\n\nclass StepOneView extends View {\n  activeStep = 'step-one';\n  activeScreen = document.querySelector('#step-one');\n  stepForm = document.querySelector('.blogname-form');\n\n  constructor() {\n    super();\n    this.addHandlerScreenReset();\n  }\n\n  addHandlerBlognameForm(handler) {\n    this.stepForm.addEventListener('submit', (event) => {\n      event.preventDefault();\n\n      const formData = new FormData(event.target);\n      const blognameInput = Object.fromEntries(formData).blognameForm;\n\n      handler(blognameInput);\n    });\n  }\n}\n\nexport default new StepOneView();\n","export default class View {\n  inputSet = ['.input', 'input'];\n  errorMessage = '.message[data-type=\"error\"]';\n  mainScreen = document.querySelector('main');\n  stepHeading = document.querySelector('.step-heading');\n  iconHeading = document.querySelector('.icon-heading');\n  checkingForWindow = document.querySelector('.checking-for');\n  buttonTag = document.querySelector('.button-tag');\n\n  addHandlerScreenReset(activeScreen = this.activeScreen) {\n    activeScreen\n      .querySelector('input')\n      .addEventListener('input', this.resetScreen.bind(this));\n  }\n\n  stepScreenInit(activeStep = this.activeStep) {\n    [this.mainScreen, this.stepHeading, this.checkingForWindow].forEach(\n      (element) => element.setAttribute('data-state', activeStep)\n    );\n  }\n\n  loadStopAnimation() {\n    const loadingSpinnerAnimation = this.stepHeading\n      .getAnimations({ subtree: true })\n      .find((animation) => animation.animationName === 'loadingSpinner');\n\n    loadingSpinnerAnimation.pause();\n\n    const currentFrame = getComputedStyle(this.stepHeading).transform;\n\n    const loadingStopAnimation = this.stepHeading.animate(\n      [{ transform: currentFrame }, { transform: 'matrix(1, 0, 0, 1, 0, 0)' }],\n      { duration: 300, fill: 'forwards' }\n    );\n\n    return loadingStopAnimation.finished;\n  }\n\n  renderSpinner() {\n    this.stepHeading.setAttribute('data-state', 'loading-spinner');\n  }\n\n  inputValidation(entryValidity, activeScreen = this.activeScreen) {\n    this.inputSet.forEach((element) =>\n      activeScreen\n        .querySelector(element)\n        .setAttribute('data-valid', entryValidity)\n    );\n\n    if (!entryValidity) {\n      activeScreen.querySelector('button').setAttribute('disabled', true);\n    }\n  }\n\n  renderError(activeScreen, error) {\n    const activeErrorMessage = activeScreen.querySelector(this.errorMessage);\n    activeErrorMessage.setAttribute('data-active', true);\n    activeErrorMessage.querySelector('p').innerText = `${error.message}`;\n  }\n\n  errorManager(error, activeScreen = this.activeScreen) {\n    this.loadStopAnimation().then(() => {\n      this.renderError(activeScreen, error);\n      this.stepScreenInit();\n      this.inputValidation(false);\n    });\n  }\n\n  resetForm() {\n    this.stepForm[1].localName !== 'button'\n      ? this.stepForm.forEach((form) => form.reset())\n      : this.stepForm.reset();\n  }\n\n  resetScreen(resetEverything = true) {\n    const resettableAttributes = ['data-active', 'data-valid', 'disabled'];\n\n    if (!resetEverything) resettableAttributes.shift();\n\n    resettableAttributes.forEach((attribute) =>\n      this.mainScreen\n        .querySelectorAll(`[${attribute}]`)\n        .forEach((activeElement) => activeElement.removeAttribute(attribute))\n    );\n  }\n}\n","import View from './View';\n\nclass StepTwoView extends View {\n  activeStep = 'step-two';\n  activeScreen = document.querySelector('#step-two');\n  stepForm = document.querySelector('.post-form');\n\n  constructor() {\n    super();\n    this.addHandlerScreenReset();\n  }\n\n  addHandlerPostForm(handler) {\n    this.stepForm.addEventListener('submit', (event) => {\n      this.resetScreen();\n      event.preventDefault();\n\n      const formData = new FormData(event.target);\n      const postInput = Object.fromEntries(formData).postForm;\n\n      handler(postInput);\n    });\n  }\n\n  setCheckingForBlogname(blogname) {\n    this.buttonTag.innerText = blogname;\n  }\n}\n\nexport default new StepTwoView();\n","import View from './View';\n\nclass SessionView extends View {\n  stepForm = document.querySelectorAll('form');\n  scrollIntoView = document.querySelector('header button');\n\n  constructor() {\n    super();\n    this.addHandlerScrollIntoView();\n  }\n\n  addHandlerScrollIntoView() {\n    this.scrollIntoView.addEventListener('click', () =>\n      this.mainScreen.scrollIntoView({ behavior: 'smooth' })\n    );\n  }\n\n  addHandlerSessionWatch(handler) {\n    window.addEventListener('load', handler);\n  }\n\n  addHandlerStepWatch(handler) {\n    const observer = new MutationObserver(handler);\n    observer.observe(this.mainScreen, {\n      attributeFilter: ['data-state'],\n      attributeOldValue: true,\n    });\n  }\n\n  addHandlerStoreScroll(handler) {\n    document.addEventListener('scroll', handler, { passive: true });\n  }\n\n  addHandlerStepBackward(handler) {\n    this.buttonTag.addEventListener('click', handler);\n  }\n\n  stepWatch(mutationList) {\n    const stepIcons = ['bi-1-circle', 'bi-2-circle'];\n    mutationList.forEach((mutation) => {\n      if (mutation.target.dataset.state !== mutation.oldValue) {\n        stepIcons.forEach((stepIcon) =>\n          this.iconHeading.classList.toggle(stepIcon)\n        );\n      }\n    });\n  }\n\n  debounce(someFunction) {\n    let frame;\n    return (...parameters) => {\n      if (frame) {\n        cancelAnimationFrame(frame);\n      }\n\n      frame = requestAnimationFrame(() => {\n        someFunction(...parameters);\n      });\n    };\n  }\n\n  storeScroll() {\n    const elements = [this.stepHeading, this.checkingForWindow];\n    document.documentElement.dataset.scroll = window.scrollY;\n\n    if (window.scrollY >= window.innerHeight - window.innerHeight / 3) {\n      elements.forEach((element) => element.setAttribute('data-visible', true));\n    } else {\n      elements.forEach((element) =>\n        element.setAttribute('data-visible', false)\n      );\n    }\n  }\n}\n\nexport default new SessionView();\n","import View from './View';\n\nclass OutputView extends View {\n  outputWindow = document.querySelectorAll('.output');\n  numberOfInstances = document.querySelector('.instances');\n  postURLs = document.querySelector('.post-urls');\n\n  setReblogInstances(numberOfInstances) {\n    this.numberOfInstances.innerText =\n      numberOfInstances > 1\n        ? `${numberOfInstances} times`\n        : `${numberOfInstances} time`;\n  }\n\n  setURLAttributes(element, attributes) {\n    Object.keys(attributes).forEach((attribute) => {\n      element.setAttribute(attribute, attributes[attribute]);\n    });\n  }\n\n  setReblogURLs(instancesURLs) {\n    instancesURLs.forEach((URL) => {\n      const hrefAttributes = {\n        href: URL,\n        target: '_blank',\n        rel: 'noopener noreferrer',\n      };\n      const aHref = document.createElement('a');\n      aHref.innerText = URL;\n      this.setURLAttributes(aHref, hrefAttributes);\n      this.postURLs.appendChild(aHref);\n    });\n  }\n\n  resetReblogURLs() {\n    if (this.postURLs.hasChildNodes()) {\n      this.postURLs\n        .querySelectorAll('a')\n        .forEach((element) => this.postURLs.removeChild(element));\n    }\n  }\n\n  showResult(outcome) {\n    this.outputWindow.forEach(\n      (output) =>\n        output.dataset.result === outcome &&\n        output.setAttribute('data-active', true)\n    );\n  }\n}\n\nexport default new OutputView();\n"],"names":["$ba30e20475feac5a$export$a9861bd62f48e142","$ba30e20475feac5a$export$923ea8233b386e99","$bd02c871d9c5ba8e$export$493b5823483d2c4e","origin","retrieveBlogBasics","retrieveBlogPosts","extractPostCredentials","retrievePostRootID","blognameValidation","error","notFound","blogname","postURL","limitExceeded","notOK","noPostId","noRootId","unexpectedError","ending","generic","specific","$bd02c871d9c5ba8e$var$newFormatStandard","$bd02c871d9c5ba8e$var$newFormatIncomplete","$bd02c871d9c5ba8e$var$newFormatInformal","$bd02c871d9c5ba8e$var$oldFormatStandard","$bd02c871d9c5ba8e$var$oldFormatIncomplete","$bd02c871d9c5ba8e$export$1216f43409aa5ee3","input","startsWith","endsWith","includes","$bd02c871d9c5ba8e$export$98d83be08b8d417c","trim","replace","$bd02c871d9c5ba8e$export$ee60134fac004cfe","typoCheck","URLSignifiers","test","undefined","trimmedInput","$bd02c871d9c5ba8e$export$968e680ef4be9337","postID","symbol","slice","length","indexOf","$0f1d4402dffacf5b$export$913815d9607ddcf9","getBlogname","JSON","parse","sessionStorage","getItem","postRootID","$0f1d4402dffacf5b$export$abf02488c1c59248","blognameInput","Error","response","fetch","status","ok","infoBasics","json","blogUUID","blog","uuid","totalPosts","total_posts","$0f1d4402dffacf5b$export$f093a98644e2e028","requestPromises","offset","push","requestStatus","map","request","every","Promise","all","postsInfo","flatMap","posts","post","rootID","reblogged_root_id","id_string","post_url","type","storage","window","x","setItem","removeItem","e","DOMException","code","name","stringify","console","log","$0f1d4402dffacf5b$export$b4cd066a67fd4e9f","URL","URLToTreat","split","postIDClean","$0f1d4402dffacf5b$export$b890cb1c1145887b","postInfo","at","$3a07c34e115c11c9$export$2e2bcd8739ae039","inputSet","errorMessage","mainScreen","document","querySelector","stepHeading","iconHeading","checkingForWindow","buttonTag","addHandlerScreenReset","activeScreen","addEventListener","resetScreen","bind","stepScreenInit","activeStep","forEach","element","setAttribute","loadStopAnimation","loadingSpinnerAnimation","getAnimations","subtree","find","animation","animationName","pause","currentFrame","getComputedStyle","transform","loadingStopAnimation","animate","duration","fill","finished","renderSpinner","inputValidation","entryValidity","renderError","activeErrorMessage","innerText","message","errorManager","then","resetForm","stepForm","localName","form","reset","resetEverything","resettableAttributes","shift","attribute","querySelectorAll","activeElement","removeAttribute","$00699351e50f4618$var$StepOneView","constructor","addHandlerBlognameForm","handler","event","preventDefault","formData","FormData","target","Object","fromEntries","blognameForm","$00699351e50f4618$export$2e2bcd8739ae039","$66f82ae3c80aad68$var$StepTwoView","addHandlerPostForm","postInput","postForm","setCheckingForBlogname","$66f82ae3c80aad68$export$2e2bcd8739ae039","$dd6c020ea341222a$var$SessionView","scrollIntoView","addHandlerScrollIntoView","behavior","addHandlerSessionWatch","addHandlerStepWatch","observer","MutationObserver","observe","attributeFilter","attributeOldValue","addHandlerStoreScroll","passive","addHandlerStepBackward","stepWatch","mutationList","stepIcons","mutation","dataset","state","oldValue","stepIcon","classList","toggle","debounce","someFunction","frame","parameters","cancelAnimationFrame","requestAnimationFrame","storeScroll","elements","documentElement","scroll","scrollY","innerHeight","$dd6c020ea341222a$export$2e2bcd8739ae039","$ebc1934d4b1e594a$var$OutputView","outputWindow","numberOfInstances","postURLs","setReblogInstances","setURLAttributes","attributes","keys","setReblogURLs","instancesURLs","aHref","createElement","href","rel","appendChild","resetReblogURLs","hasChildNodes","removeChild","showResult","outcome","output","result","$ebc1934d4b1e594a$export$2e2bcd8739ae039","$f50bd1f2915ed0f2$var$controlBlognameForm","blogBasics","$f50bd1f2915ed0f2$var$controlPostForm","postCredentials","$f50bd1f2915ed0f2$var$controlCheckResult","reblogCheckData","$0f1d4402dffacf5b$export$f377efffa0e0722b","targetedPosts","filter","instance","confirm","clear"],"version":3,"file":"index.5ee3ca99.js.map"}